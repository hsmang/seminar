<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">
	<parameterMap type="jp.seminar.user.model.UserVO" id="userVO">
		<parameter property="user_email"/>
		<parameter property="user_pw"/>
		<parameter property="user_no"/>
		<parameter property="user_name"/>		
		<parameter property="user_hp"/>
	</parameterMap>
    <select id="count" resultType="int">
        select a from test where 1
    </select>
    
    <select id="getUserByID" resultType="jp.seminar.user.model.UserVO">
    	SELECT
    		idx
    		,user_no
    		,user_name
    		,user_pw
    	FROM
    		user
    	WHERE
    		user_name = #{username}
    </select>
    
    <select id="getCountUserByID" parameterType="jp.seminar.user.model.UserVO" resultType="int">
    	SELECT
    		count(*)
    	FROM
    		`seminar`.`user_info`
    	WHERE
    		user_email = #{user_email}
    </select>
    
    <insert id="userJoinProc" parameterMap="userVO">
    	INSERT INTO `seminar`.`user_info` 
    	(`user_email`, `user_pw`, `user_no`, `user_name`, `user_hp`, `user_role`, `user_state`, `reg_date`, `update_date`) 
    	VALUES 
    	( ? , ? , ? , ? , ? , '2', '0', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
    </insert>
    
    <select id="userLoginProc" parameterType="jp.seminar.user.model.UserVO" resultType="int">
    	SELECT
    		count(*)
    	FROM
    		`seminar`.`user_info`
    	WHERE
    		user_email = #{user_email}
    		and
    		user_pw = #{user_pw}
    		and
    		user_state = 1    		
    </select>
    <select id="getUserInfoByEmail" parameterType="jp.seminar.user.model.UserVO" resultType="jp.seminar.user.model.UserVO">
    	SELECT
    		*
    	FROM
    		`seminar`.`user_info`
    	WHERE
    		user_email = #{user_email}
    </select>
    
    <update id="userUpdateProc" parameterType="jp.seminar.user.model.UserVO">
		UPDATE `seminar`.`user_info` 
		SET 
			`user_no` = #{user_no}, 
			`user_pw` = #{user_pw}, 
			`user_name` = #{user_name}, 
			`user_hp` = #{user_hp},
			`update_date` = now() 
		WHERE `user_info`.`user_idx` = #{user_idx}; 
    </update>
    <select id="getTotalCount" parameterType="int" resultType="int">
    	SELECT
    		count(*)
    	FROM user_info
    	WHERE user_role &lt;= #{role}
    </select>
    
    <select id="getUserList" parameterType="hashmap" resultType="jp.seminar.user.model.UserVO">
    	SELECT 
    		`user_idx`,`user_no`,`user_email`,`user_name`,`user_hp`,`user_role`,`user_state`,`reg_date`,`update_date`
    	FROM
    		`user_info`
    	<if test="role != 4">
    		WHERE user_role = #{role}
  		</if>
    	
    	ORDER BY user_idx DESC
        LIMIT #{firstRow} , #{pageSize}
    </select>
    
    <update id="userRoleChange" parameterType="jp.seminar.user.model.UserVO">
		UPDATE `seminar`.`user_info` 
		SET 
			`user_role` = #{user_role} 
		WHERE `user_info`.`user_idx` = #{user_idx}; 
    </update>
    
    <update id="userStateChange" parameterType="jp.seminar.user.model.UserVO">
		UPDATE `seminar`.`user_info` 
		SET 
			`user_state` = #{user_state} 
		WHERE `user_info`.`user_idx` = #{user_idx}; 
    </update>
    
</mapper>